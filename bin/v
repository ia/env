#!/usr/bin/env bash
#set -x
set -e

# makes (g)vim works with tags (more or less)
# required old-fashioned vim plugins:
#  - omni/omnicppcomplete
#  - cscope/cscope_maps
#  - gtags

# Not a pro vim user, but this makes work it something like that:
# * ctags  goes for omni to complete C structs with elements/C++ classes with methods & members
# * cscope goes for cross-inspection (calling & being called)
# * gtags  goes for generic tags detection & navigation

source ~/.gvimconfig
# $ cat ~/.gvimconfig
#" as simple as
#GVIM_ARGS="-g  -geometry 180x64  -p"

sdir=${PWD}
TNAME=".tags"

# scan for dir .tags in current dir up to root
d="${sdir}"
while [ "${d}" != "/" ]; do
	if [ -d "${d}"/"${TNAME}" ]; then
		tdir="${d}"/"${TNAME}"
		rdir="${d}"
		break
	else
		d="`dirname "${d}"`"
	fi;
done;

#echo CURR_DIR="${sdir}"
#echo ROOT_SRC="${rdir}"
#echo TAGS_DIR="${tdir}"

# if .tags dir somewhere then detecting specific tags files generated by `mktags'
# (see in the same dir)

if [ -f "${tdir}"/tags ]; then
	v_ex_tags="-c ':set tags=${tdir}/tags'"
fi;
if [ -f "${tdir}"/cscope.out ]; then
	v_ex_cscope="-c ':cscope  add  ${tdir}/cscope.out  ${rdir}'"
fi;
if [ -f "${tdir}"/GTAGS ]; then
	v_ex_gtags="\
export GPATH="${tdir}"/GPATH; \
export GRTAGS="${tdir}"/GRTAGS; \
export GTAGS="${tdir}"/GTAGS; \
export GTAGSROOT="${rdir}"; \
export GTAGSDBPATH="${tdir}"; \
"
fi;
# GNU Global doesn't support command-line options to provide tags from separate files,
#   only env variables :(

# generate resulting cmd line and feed it to shell for fire-up & running:
#GVIM_CMDS="${v_ex_tags}  ${v_ex_cscope}  -c ':'"
GVIM_CMDS="${v_ex_tags}  ${v_ex_cscope}"

#echo  ${v_ex_gtags}  vim.gtk  ${GVIM_CMDS}  ${GVIM_ARGS}  $@
eval  ${v_ex_gtags}  vim.gtk  ${GVIM_CMDS}  ${GVIM_ARGS}  $@

# usual defaults inside vim in INPUT mode:
# * Ctrl ]     - GNU Global
# * Ctrl Enter - cscope
# * Ctrl Space - omni

